1) START DEMO: Start containers

 cd /Users/Shared
 ./democtl.sh -s mdbtx -d spider -a start
===============================================================================
2) LAYOUT SETUP: Open 2 windows for Maxscale and 3 for MariaDB servers.

+-------+-------+
|spider | node1 |
|       +-------+
|       + node2 |
|       +-------+
|       | node3 |
+-------+-------+

===============================================================================
3) Enable the Spider storage engine

Talking points
  + easy install. One step

COMMANDS
========
# SOURCE /usr/share/mysql/install_spider.sql;
# On the spider server execute

 SHOW ENGINES;

===============================================================================
4) Validate accounts for spider to connect with on backend servers

COMMANDS
========

# On BACKEND NODES 1, 2 and 3 execute either one of the following options:

 SELECT * FROM information_schema.user_privileges WHERE grantee LIKE '%172.20.0.2%';

 \! clear
 SHOW TABLES;
 SHOW CREATE TABLE opportunities\G

===============================================================================
5) Verify that these connections can be used from the spider head node

COMMANDS
========
# On the HEAD NODE

 \! clear
 system  mysql -u spider -pletmein -h 172.20.0.3 -e 'SELECT @@hostname'
 system  mysql -u spider -pletmein -h 172.20.0.4 -e 'SELECT @@hostname'
 system  mysql -u spider -pletmein -h 172.20.0.5 -e 'SELECT @@hostname'


===============================================================================
6) Create server entries on spider server

COMMANDS
========
# ON HEAD NODE

 \! clear
 system cat /mdb/mdbtx/spider/spider_head.sql

 SELECT * FROM mysql.servers\G

===============================================================================
7) Use case 1: sharding by hash

COMMANDS
========

# ON THE SPIDER NODE: 

 \! clear
 system cat /mdb/mdbtx/spider/cr_byHash.sql

 SOURCE /mdb/mdbtx/spider/cr_byHash.sql
 \! /mdb/mdbtx/spider/ld_opportunities.sh;

 SELECT * FROM opportunities;

# ON EACH SPIDER NODE

 \! clear
 SELECT @@hostname AS Server, COUNT(*) AS Records_Count FROM opportunities;

 \! clear
 SELECT id, accountName, owner FROM opportunities ORDER BY id;

===============================================================================
8) Use case 2: sharding by Range

COMMANDS
========

# ON THE SPIDER NODE:

 \! clear
 system cat /mdb/mdbtx/spider/cr_byRange.sql

 SOURCE /mdb/mdbtx/spider/cr_byRange.sql
 \! /mdb/mdbtx/spider/ld_opportunities.sh;

 SELECT * FROM opportunities;

# ON EACH SPIDER NODE

 \! clear
 SELECT @@hostname AS Server, COUNT(*) AS Records_Count FROM opportunities;

 \! clear
 SELECT id, accountName, owner FROM opportunities ORDER BY accountName;

===============================================================================
9) Use case 3: sharding by List

COMMANDS
=========

# ON THE SPIDER NODE:

 \! clear
 system cat /mdb/mdbtx/spider/cr_byList.sql

 SOURCE /mdb/mdbtx/spider/cr_byList.sql
 \! /mdb/mdbtx/spider/ld_opportunities.sh;

 SELECT * FROM opportunities;

# ON EACH SPIDER NODE

 \! clear
 SELECT @@hostname AS Server, COUNT(*) AS Records_Count FROM opportunities;

 \! clear
 SELECT id, accountName, owner  FROM opportunities ORDER BY owner;
